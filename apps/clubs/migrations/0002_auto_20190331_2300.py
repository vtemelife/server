# Generated by Django 2.1.5 on 2019-03-31 23:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("storage", "0002_auto_20190331_2300"),
        ("clubs", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geo", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="club",
            name="administrator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="Administrator"
            ),
        ),
        migrations.AddField(
            model_name="club",
            name="avatar",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="storage.Image",
                verbose_name="Avatar",
            ),
        ),
        migrations.AddField(
            model_name="club",
            name="city",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="geo.City", verbose_name="City"),
        ),
        migrations.AddField(
            model_name="club",
            name="country",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="geo.Country", verbose_name="Country"
            ),
        ),
        migrations.AddField(
            model_name="club",
            name="moderators",
            field=models.ManyToManyField(
                blank=True, related_name="moderator_clubs", to=settings.AUTH_USER_MODEL, verbose_name="Moderators"
            ),
        ),
        migrations.AddField(
            model_name="club",
            name="region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="geo.Region", verbose_name="Region"
            ),
        ),
        migrations.AddField(
            model_name="club",
            name="users",
            field=models.ManyToManyField(
                blank=True, related_name="user_clubs", to=settings.AUTH_USER_MODEL, verbose_name="Users"
            ),
        ),
    ]
